modal remove_all_tags() {
    /tag @s remove compilation_merge
    /tag @s remove compilation_parsing
    /tag @s remove compilation_translating
    /tag @s remove compilation_grouping
    /tag @s remove compilation_controls
    /tag @s remove compilation_validation
    /tag @s remove compilation_done
}

asat(@e[tag=isCustomBlock,tag=block4]) {
    
    // Fill in GUI design items
    /function computercraft:machines/compiler/gui

    if('data block ~ ~ ~ {Items:[{Slot:11b,id:"minecraft:paper",tag:{CustomModelData:24201}}]}') {
 
        // When inserted storage
        if('data entity @s {Tags:["compilation_empty"]}') {
            /function computercraft:machines/compiler/compilation/copy

            /data modify block ~ ~ ~ Items[{Slot:11b}].tag.compilation.error set value ""
            /data modify block ~ ~ ~ Items[{Slot:11b}].tag.compilation.error_desc set value ""
            /data modify block ~ ~ ~ Items[{Slot:11b}].tag.compilation.merged set value []

            /tag @s add compilation_merge
            /tag @s remove compilation_empty
        }

        // Merging
        if('data entity @s {Tags:["compilation_merge"]}') {
            /function computercraft:machines/compiler/compilation/merge
        }

        // When merging finished
        if('data entity @s {Tags:["compilation_merge"]} unless data block ~ ~ ~ Items[{Slot:11b}].tag.compilation.source[]') {
            /data modify block ~ ~ ~ Items[{Slot:11b}].tag.compilation.translated set value []
            
            /tag @s add compilation_translating
            /tag @s remove compilation_merge
        }

        // Translating
        if('data entity @s {Tags:["compilation_translating"]}') {
            /function computercraft:machines/compiler/compilation/translating
        }

        // When translation finished
        if('data entity @s {Tags:["compilation_translating"]} unless data block ~ ~ ~ Items[{Slot:11b}].tag.compilation.merged[]') {
            /data modify block ~ ~ ~ Items[{Slot:11b}].tag.compilation.reverse_source set value []
            
            /tag @s add compilation_numbers
            /tag @s remove compilation_translating
        }

        // Parsing numbers
        if('data entity @s {Tags:["compilation_numbers"]}') {
            /function computercraft:machines/compiler/compilation/numbers
        }

        // When numbers finished
        if('data entity @s {Tags:["compilation_numbers"]} unless data block ~ ~ ~ Items[{Slot:11b}].tag.compilation.translated[]') {
            /data modify block ~ ~ ~ Items[{Slot:11b}].tag.compilation.reversed set value []
            
            /tag @s add compilation_reverse
            /tag @s remove compilation_numbers
        }

        // Reversing
        if('data entity @s {Tags:["compilation_reverse"]}') {
            /function computercraft:machines/compiler/compilation/reverse
        }

        // When reversing finished
        if('data entity @s {Tags:["compilation_reverse"]} unless data block ~ ~ ~ Items[{Slot:11b}].tag.compilation.reverse_source[]') {
            /data modify block ~ ~ ~ Items[{Slot:11b}].tag.compilation.grouped set value {stack:[],main:[]}
            
            /tag @s add compilation_grouping
            /tag @s remove compilation_reverse
        }

        // Grouping
        if('data entity @s {Tags:["compilation_grouping"]}') {
            /function computercraft:machines/compiler/compilation/grouping
        }

        // When grouping finished
        if('data entity @s {Tags:["compilation_grouping"]} unless data block ~ ~ ~ Items[{Slot:11b}].tag.compilation.reversed[]') {
            if ('data block ~ ~ ~ Items[{Slot:11b}].tag.compilation.grouped.stack[]') {
                compilation_error("Brackets mismatch", "missing closing bracket")
            }

            /data modify block ~ ~ ~ Items[{Slot:11b}].tag.compilation.controls set value {memory:{src:[],res:[]},stack:[]}
            /data modify block ~ ~ ~ Items[{Slot:11b}].tag.compilation.controls.memory.src set from block ~ ~ ~ Items[{Slot:11b}].tag.compilation.grouped.main
            
            /tag @s add compilation_controls
            /tag @s remove compilation_grouping
        }

        // Control blocks assigning
        if('data entity @s {Tags:["compilation_controls"]}') {
            /function computercraft:machines/compiler/compilation/controls
        }

        // When assigning finished
        if('data entity @s {Tags:["compilation_controls"]} unless data block ~ ~ ~ Items[{Slot:11b}].tag.compilation.controls.memory.src[] unless data block ~ ~ ~ Items[{Slot:11b}].tag.compilation.controls.stack[]') {
            /data modify block ~ ~ ~ Items[{Slot:11b}].tag.compilation.validation set value {memory:{src:[],res:[]},stack:[]}
            /data modify block ~ ~ ~ Items[{Slot:11b}].tag.compilation.validation.memory.src set from block ~ ~ ~ Items[{Slot:11b}].tag.compilation.controls.memory.res
            
            /tag @s add compilation_validation
            /tag @s remove compilation_controls
        }

        // Final validation
        if('data entity @s {Tags:["compilation_validation"]}') {
            /function computercraft:machines/compiler/compilation/validation
        }

        // When assigning finished
        if('data entity @s {Tags:["compilation_validation"]} unless data block ~ ~ ~ Items[{Slot:11b}].tag.compilation.validation.memory.src[] unless data block ~ ~ ~ Items[{Slot:11b}].tag.compilation.validation.stack[]') {
            /tag @s add compilation_done
            /tag @s remove compilation_validation
        }

        // --------------- Compilation error ------------------
        if('data entity @s {Tags:["compilation_error"]}') {          
            remove_all_tags()

            /data modify block ~ ~ ~ Items[{Slot:13b}].tag.display.Lore prepend from block ~ ~ ~ Items[{Slot:11b}].tag.compilation.error
            /data modify block ~ ~ ~ Items[{Slot:13b}].tag.display.Lore append from block ~ ~ ~ Items[{Slot:11b}].tag.compilation.error_desc
        }

        // --------------- Compilation done ------------------
        if('data entity @s {Tags:["compilation_done"]}') {    
            /data modify block ~ ~ ~ Items[{Slot:11b}].tag.compiled set from block ~ ~ ~ Items[{Slot:11b}].tag.compilation.validation.memory.res
            /data remove block ~ ~ ~ Items[{Slot:11b}].tag.compilation
            /data modify block ~ ~ ~ Items[{Slot:11b}].tag.display.Lore[1] set value '[{"text":"Compiled", "italic": false, "color": "green"}]'
            /data modify block ~ ~ ~ Items[{Slot:11b}].Slot set value 15b
        }

    } else {
        // When no storage inserted
        remove_all_tags()

        /tag @s remove compilation_error
        /tag @s add compilation_empty
    }
}